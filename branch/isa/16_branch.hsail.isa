ShaderType = IL_SHADER_COMPUTE
TargetChip = t



; ------------- SC_SRCSHADER Dump ------------------
SC_SHADERSTATE: u32NumIntVSConst = 0
SC_SHADERSTATE: u32NumIntPSConst = 0
SC_SHADERSTATE: u32NumIntGSConst = 0
SC_SHADERSTATE: u32NumBoolVSConst = 0
SC_SHADERSTATE: u32NumBoolPSConst = 0
SC_SHADERSTATE: u32NumBoolGSConst = 0
SC_SHADERSTATE: u32NumFloatVSConst = 0
SC_SHADERSTATE: u32NumFloatPSConst = 0
SC_SHADERSTATE: u32NumFloatGSConst = 0
u32SCOptions[0] = 0x00000001 SCOption_C0
u32SCOptions[1] = 0x00000000
u32SCOptions[2] = 0x04000000 SCOption_R1000_DISABLE_INDEXED_RESOURCE_TYPE_CHECK
u32SCOptions[3] = 0x00001F00 SCOption_R1100_STORE_COALESCE_WORKAROUND_BUG452151 SCOption_R1000R1100_VCCZ_CLOBBER_WORKAROUND_BUG457939 SCOption_UBTS463396_RANGE_CHECK_FOR_VMEMOP SCOption_UBTS463071_RANGE_CHECK_FOR_SMRD SCOption_R1100_FLAT_SCRATCH_OOB_WORKAROUND_BUG379895
u32SCOptions[4] = 0x00800000 SCOption_R1000_SGPR_TRAP_REGISTERS
; -------- Disassembly --------------------
shader main
  asic(CI)
  type(CS)

  s_load_dword  s0, s[0:1], 0x01                        // 000000000000: C0000101
  s_waitcnt     lgkmcnt(0)                              // 000000000004: BF8C007F
  s_bfe_u32     s0, s0, 0x00100000                      // 000000000008: 9380FF00 00100000
  s_mul_i32     s0, s0, s4                              // 000000000010: 93000400
  v_add_i32     v0, s[4:5], s0, v0                      // 000000000014: D24A0400 00020000
  s_load_dwordx2  s[0:1], s[2:3], 0x00                  // 00000000001C: C0400300
  s_waitcnt     lgkmcnt(0)                              // 000000000020: BF8C007F
  v_add_i32     v0, s[4:5], v0, s0                      // 000000000024: D24A0400 00000100
  v_ashrrev_i32  v3, 31, v0                             // 00000000002C: 3006009F
  v_lshrrev_b32  v3, 28, v3                             // 000000000030: 2C06069C
  v_add_i32     v3, vcc, v0, v3                         // 000000000034: 4A060700
  s_load_dwordx2  s[0:1], s[2:3], 0x0e                  // 000000000038: C040030E
  v_and_b32     v3, -16, v3                             // 00000000003C: 360606D0
  s_load_dwordx2  s[2:3], s[2:3], 0x0c                  // 000000000040: C041030C
  v_sub_i32     v3, vcc, v0, v3                         // 000000000044: 4C060700
  v_cmp_gt_u32  s[4:5], v3, 7                           // 000000000048: D1880004 00010F03
  s_mov_b64     s[6:7], exec                            // 000000000050: BE86047E
  s_andn2_b64   exec, s[6:7], s[4:5]                    // 000000000054: 8AFE0406
  s_cbranch_execz  label_017C                           // 000000000058: BF880165
  v_cmp_gt_u32  s[4:5], v3, 3                           // 00000000005C: D1880004 00010703
  s_mov_b64     s[8:9], exec                            // 000000000064: BE88047E
  s_andn2_b64   exec, s[8:9], s[4:5]                    // 000000000068: 8AFE0408
  s_cbranch_execz  label_00CA                           // 00000000006C: BF8800AE
  v_cmp_gt_u32  s[4:5], v3, 1                           // 000000000070: D1880004 00010303
  s_mov_b64     s[10:11], exec                          // 000000000078: BE8A047E
  s_andn2_b64   exec, s[10:11], s[4:5]                  // 00000000007C: 8AFE040A
  s_cbranch_execz  label_0074                           // 000000000080: BF880053
  v_cmp_ne_i32  s[4:5], v3, 0                           // 000000000084: D10A0004 00010103
  s_mov_b64     s[12:13], exec                          // 00000000008C: BE8C047E
  s_andn2_b64   exec, s[12:13], s[4:5]                  // 000000000090: 8AFE040C
  s_cbranch_execz  label_0048                           // 000000000094: BF880022
  v_ashrrev_i32  v1, 31, v0                             // 000000000098: 3002009F
  v_lshl_b64    v[1:2], v[0:1], 2                       // 00000000009C: D2C20001 00010500
  s_waitcnt     lgkmcnt(0)                              // 0000000000A4: BF8C007F
  v_add_i32     v0, s[4:5], s2, v1                      // 0000000000A8: D24A0400 00020202
  v_mov_b32     v4, s3                                  // 0000000000B0: 7E080203
  v_addc_u32    v4, vcc, v4, v2, s[4:5]                 // 0000000000B4: D2506A04 00120504
  v_mov_b32     v5, v4                                  // 0000000000BC: 7E0A0304
  v_mov_b32     v4, v0                                  // 0000000000C0: 7E080300
  flat_load_dword  v0, v[4:5]                           // 0000000000C4: DC300000 00000004
  s_mov_b64     s[4:5], exec                            // 0000000000CC: BE84047E
  s_mov_b64     s[14:15], exec                          // 0000000000D0: BE8E047E
  v_mov_b32     v4, 0x000003e8                          // 0000000000D4: 7E0802FF 000003E8
  s_nop         0x0000                                  // 0000000000DC: BF800000
label_0038:
  v_lshlrev_b32  v3, 2, v3                              // 0000000000E0: 34060682
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 0000000000E4: BF8C0070
  v_add_i32     v3, s[16:17], v0, v3                    // 0000000000E8: D24A1003 00020700
  v_add_i32     v4, vcc, -1, v4                         // 0000000000F0: 4A0808C1
  v_cmp_ne_i32  s[16:17], v4, 0                         // 0000000000F4: D10A0010 00010104
  s_mov_b64     s[18:19], exec                          // 0000000000FC: BE92047E
  s_andn2_b64   exec, s[18:19], s[16:17]                // 000000000100: 8AFE1012
  s_cbranch_execz  label_0044                           // 000000000104: BF880002
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000108: 8A8E7E0E
  s_cbranch_scc0  label_0046                            // 00000000010C: BF840002
label_0044:
  s_and_b64     exec, s[18:19], s[14:15]                // 000000000110: 87FE0E12
  s_branch      label_0038                              // 000000000114: BF82FFF2
label_0046:
  s_mov_b64     exec, s[4:5]                            // 000000000118: BEFE0404
  v_mov_b32     v0, 0                                   // 00000000011C: 7E000280
label_0048:
  s_andn2_b64   exec, s[12:13], exec                    // 000000000120: 8AFE7E0C
  s_cbranch_execz  label_0073                           // 000000000124: BF880029
  v_cmp_ne_i32  s[4:5], v3, 1                           // 000000000128: D10A0004 00010303
  s_mov_b64     s[14:15], exec                          // 000000000130: BE8E047E
  s_andn2_b64   exec, s[14:15], s[4:5]                  // 000000000134: 8AFE040E
  s_cbranch_execz  label_0070                           // 000000000138: BF880021
  v_ashrrev_i32  v1, 31, v0                             // 00000000013C: 3002009F
  v_lshl_b64    v[1:2], v[0:1], 2                       // 000000000140: D2C20001 00010500
  s_waitcnt     lgkmcnt(0)                              // 000000000148: BF8C007F
  v_add_i32     v0, s[4:5], s2, v1                      // 00000000014C: D24A0400 00020202
  v_mov_b32     v4, s3                                  // 000000000154: 7E080203
  v_addc_u32    v4, vcc, v4, v2, s[4:5]                 // 000000000158: D2506A04 00120504
  v_mov_b32     v5, v4                                  // 000000000160: 7E0A0304
  v_mov_b32     v4, v0                                  // 000000000164: 7E080300
  flat_load_dword  v0, v[4:5]                           // 000000000168: DC300000 00000004
  s_mov_b64     s[4:5], exec                            // 000000000170: BE84047E
  s_mov_b64     s[16:17], exec                          // 000000000174: BE90047E
  v_mov_b32     v4, 0x000003e8                          // 000000000178: 7E0802FF 000003E8
label_0060:
  v_lshlrev_b32  v3, 2, v3                              // 000000000180: 34060682
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000184: BF8C0070
  v_add_i32     v3, s[18:19], v0, v3                    // 000000000188: D24A1203 00020700
  v_add_i32     v4, vcc, -1, v4                         // 000000000190: 4A0808C1
  v_cmp_ne_i32  s[18:19], v4, 0                         // 000000000194: D10A0012 00010104
  s_mov_b64     s[20:21], exec                          // 00000000019C: BE94047E
  s_andn2_b64   exec, s[20:21], s[18:19]                // 0000000001A0: 8AFE1214
  s_cbranch_execz  label_006C                           // 0000000001A4: BF880002
  s_andn2_b64   s[16:17], s[16:17], exec                // 0000000001A8: 8A907E10
  s_cbranch_scc0  label_006E                            // 0000000001AC: BF840002
label_006C:
  s_and_b64     exec, s[20:21], s[16:17]                // 0000000001B0: 87FE1014
  s_branch      label_0060                              // 0000000001B4: BF82FFF2
label_006E:
  s_mov_b64     exec, s[4:5]                            // 0000000001B8: BEFE0404
  v_mov_b32     v0, 0                                   // 0000000001BC: 7E000280
label_0070:
  s_andn2_b64   exec, s[14:15], exec                    // 0000000001C0: 8AFE7E0E
  s_cbranch_execz  label_0073                           // 0000000001C4: BF880001
  v_mov_b32     v0, 8                                   // 0000000001C8: 7E000288
label_0073:
  s_mov_b64     exec, s[12:13]                          // 0000000001CC: BEFE040C
label_0074:
  s_andn2_b64   exec, s[10:11], exec                    // 0000000001D0: 8AFE7E0A
  s_cbranch_execz  label_00C9                           // 0000000001D4: BF880053
  v_cmp_ne_i32  s[4:5], v3, 2                           // 0000000001D8: D10A0004 00010503
  s_mov_b64     s[12:13], exec                          // 0000000001E0: BE8C047E
  s_andn2_b64   exec, s[12:13], s[4:5]                  // 0000000001E4: 8AFE040C
  s_cbranch_execz  label_009C                           // 0000000001E8: BF880021
  v_ashrrev_i32  v1, 31, v0                             // 0000000001EC: 3002009F
  v_lshl_b64    v[1:2], v[0:1], 2                       // 0000000001F0: D2C20001 00010500
  s_waitcnt     lgkmcnt(0)                              // 0000000001F8: BF8C007F
  v_add_i32     v0, s[4:5], s2, v1                      // 0000000001FC: D24A0400 00020202
  v_mov_b32     v4, s3                                  // 000000000204: 7E080203
  v_addc_u32    v4, vcc, v4, v2, s[4:5]                 // 000000000208: D2506A04 00120504
  v_mov_b32     v5, v4                                  // 000000000210: 7E0A0304
  v_mov_b32     v4, v0                                  // 000000000214: 7E080300
  flat_load_dword  v0, v[4:5]                           // 000000000218: DC300000 00000004
  s_mov_b64     s[4:5], exec                            // 000000000220: BE84047E
  s_mov_b64     s[14:15], exec                          // 000000000224: BE8E047E
  v_mov_b32     v4, 0x000003e8                          // 000000000228: 7E0802FF 000003E8
label_008C:
  v_lshlrev_b32  v3, 2, v3                              // 000000000230: 34060682
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000234: BF8C0070
  v_add_i32     v3, s[16:17], v0, v3                    // 000000000238: D24A1003 00020700
  v_add_i32     v4, vcc, -1, v4                         // 000000000240: 4A0808C1
  v_cmp_ne_i32  s[16:17], v4, 0                         // 000000000244: D10A0010 00010104
  s_mov_b64     s[18:19], exec                          // 00000000024C: BE92047E
  s_andn2_b64   exec, s[18:19], s[16:17]                // 000000000250: 8AFE1012
  s_cbranch_execz  label_0098                           // 000000000254: BF880002
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000258: 8A8E7E0E
  s_cbranch_scc0  label_009A                            // 00000000025C: BF840002
label_0098:
  s_and_b64     exec, s[18:19], s[14:15]                // 000000000260: 87FE0E12
  s_branch      label_008C                              // 000000000264: BF82FFF2
label_009A:
  s_mov_b64     exec, s[4:5]                            // 000000000268: BEFE0404
  v_mov_b32     v0, 0                                   // 00000000026C: 7E000280
label_009C:
  s_andn2_b64   exec, s[12:13], exec                    // 000000000270: 8AFE7E0C
  s_cbranch_execz  label_00C9                           // 000000000274: BF88002B
  v_cmp_ne_i32  s[4:5], v3, 3                           // 000000000278: D10A0004 00010703
  s_mov_b64     s[14:15], exec                          // 000000000280: BE8E047E
  s_andn2_b64   exec, s[14:15], s[4:5]                  // 000000000284: 8AFE040E
  s_cbranch_execz  label_00C6                           // 000000000288: BF880023
  v_ashrrev_i32  v1, 31, v0                             // 00000000028C: 3002009F
  v_lshl_b64    v[1:2], v[0:1], 2                       // 000000000290: D2C20001 00010500
  s_waitcnt     lgkmcnt(0)                              // 000000000298: BF8C007F
  v_add_i32     v0, s[4:5], s2, v1                      // 00000000029C: D24A0400 00020202
  v_mov_b32     v4, s3                                  // 0000000002A4: 7E080203
  v_addc_u32    v4, vcc, v4, v2, s[4:5]                 // 0000000002A8: D2506A04 00120504
  v_mov_b32     v5, v4                                  // 0000000002B0: 7E0A0304
  v_mov_b32     v4, v0                                  // 0000000002B4: 7E080300
  flat_load_dword  v0, v[4:5]                           // 0000000002B8: DC300000 00000004
  s_mov_b64     s[4:5], exec                            // 0000000002C0: BE84047E
  s_mov_b64     s[16:17], exec                          // 0000000002C4: BE90047E
  v_mov_b32     v4, 0x000003e8                          // 0000000002C8: 7E0802FF 000003E8
  s_nop         0x0000                                  // 0000000002D0: BF800000
  s_nop         0x0000                                  // 0000000002D4: BF800000
label_00B6:
  v_lshlrev_b32  v3, 2, v3                              // 0000000002D8: 34060682
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 0000000002DC: BF8C0070
  v_add_i32     v3, s[18:19], v0, v3                    // 0000000002E0: D24A1203 00020700
  v_add_i32     v4, vcc, -1, v4                         // 0000000002E8: 4A0808C1
  v_cmp_ne_i32  s[18:19], v4, 0                         // 0000000002EC: D10A0012 00010104
  s_mov_b64     s[20:21], exec                          // 0000000002F4: BE94047E
  s_andn2_b64   exec, s[20:21], s[18:19]                // 0000000002F8: 8AFE1214
  s_cbranch_execz  label_00C2                           // 0000000002FC: BF880002
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000000300: 8A907E10
  s_cbranch_scc0  label_00C4                            // 000000000304: BF840002
label_00C2:
  s_and_b64     exec, s[20:21], s[16:17]                // 000000000308: 87FE1014
  s_branch      label_00B6                              // 00000000030C: BF82FFF2
label_00C4:
  s_mov_b64     exec, s[4:5]                            // 000000000310: BEFE0404
  v_mov_b32     v0, 0                                   // 000000000314: 7E000280
label_00C6:
  s_andn2_b64   exec, s[14:15], exec                    // 000000000318: 8AFE7E0E
  s_cbranch_execz  label_00C9                           // 00000000031C: BF880001
  v_mov_b32     v0, 7                                   // 000000000320: 7E000287
label_00C9:
  s_mov_b64     exec, s[10:11]                          // 000000000324: BEFE040A
label_00CA:
  s_andn2_b64   exec, s[8:9], exec                      // 000000000328: 8AFE7E08
  s_cbranch_execz  label_017B                           // 00000000032C: BF8800AF
  v_cmp_gt_u32  s[4:5], v3, 5                           // 000000000330: D1880004 00010B03
  s_mov_b64     s[10:11], exec                          // 000000000338: BE8A047E
  s_andn2_b64   exec, s[10:11], s[4:5]                  // 00000000033C: 8AFE040A
  s_cbranch_execz  label_0126                           // 000000000340: BF880055
  v_cmp_ne_i32  s[4:5], v3, 4                           // 000000000344: D10A0004 00010903
  s_mov_b64     s[12:13], exec                          // 00000000034C: BE8C047E
  s_andn2_b64   exec, s[12:13], s[4:5]                  // 000000000350: 8AFE040C
  s_cbranch_execz  label_00F7                           // 000000000354: BF880021
  v_ashrrev_i32  v1, 31, v0                             // 000000000358: 3002009F
  v_lshl_b64    v[1:2], v[0:1], 2                       // 00000000035C: D2C20001 00010500
  s_waitcnt     lgkmcnt(0)                              // 000000000364: BF8C007F
  v_add_i32     v0, s[4:5], s2, v1                      // 000000000368: D24A0400 00020202
  v_mov_b32     v4, s3                                  // 000000000370: 7E080203
  v_addc_u32    v4, vcc, v4, v2, s[4:5]                 // 000000000374: D2506A04 00120504
  v_mov_b32     v5, v4                                  // 00000000037C: 7E0A0304
  v_mov_b32     v4, v0                                  // 000000000380: 7E080300
  flat_load_dword  v0, v[4:5]                           // 000000000384: DC300000 00000004
  s_mov_b64     s[4:5], exec                            // 00000000038C: BE84047E
  s_mov_b64     s[14:15], exec                          // 000000000390: BE8E047E
  v_mov_b32     v4, 0x000003e8                          // 000000000394: 7E0802FF 000003E8
label_00E7:
  v_lshlrev_b32  v3, 2, v3                              // 00000000039C: 34060682
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 0000000003A0: BF8C0070
  v_add_i32     v3, s[16:17], v0, v3                    // 0000000003A4: D24A1003 00020700
  v_add_i32     v4, vcc, -1, v4                         // 0000000003AC: 4A0808C1
  v_cmp_ne_i32  s[16:17], v4, 0                         // 0000000003B0: D10A0010 00010104
  s_mov_b64     s[18:19], exec                          // 0000000003B8: BE92047E
  s_andn2_b64   exec, s[18:19], s[16:17]                // 0000000003BC: 8AFE1012
  s_cbranch_execz  label_00F3                           // 0000000003C0: BF880002
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000003C4: 8A8E7E0E
  s_cbranch_scc0  label_00F5                            // 0000000003C8: BF840002
label_00F3:
  s_and_b64     exec, s[18:19], s[14:15]                // 0000000003CC: 87FE0E12
  s_branch      label_00E7                              // 0000000003D0: BF82FFF2
label_00F5:
  s_mov_b64     exec, s[4:5]                            // 0000000003D4: BEFE0404
  v_mov_b32     v0, 0                                   // 0000000003D8: 7E000280
label_00F7:
  s_andn2_b64   exec, s[12:13], exec                    // 0000000003DC: 8AFE7E0C
  s_cbranch_execz  label_0125                           // 0000000003E0: BF88002C
  v_cmp_ne_i32  s[4:5], v3, 5                           // 0000000003E4: D10A0004 00010B03
  s_mov_b64     s[14:15], exec                          // 0000000003EC: BE8E047E
  s_andn2_b64   exec, s[14:15], s[4:5]                  // 0000000003F0: 8AFE040E
  s_cbranch_execz  label_0122                           // 0000000003F4: BF880024
  v_ashrrev_i32  v1, 31, v0                             // 0000000003F8: 3002009F
  v_lshl_b64    v[1:2], v[0:1], 2                       // 0000000003FC: D2C20001 00010500
  s_waitcnt     lgkmcnt(0)                              // 000000000404: BF8C007F
  v_add_i32     v0, s[4:5], s2, v1                      // 000000000408: D24A0400 00020202
  v_mov_b32     v4, s3                                  // 000000000410: 7E080203
  v_addc_u32    v4, vcc, v4, v2, s[4:5]                 // 000000000414: D2506A04 00120504
  v_mov_b32     v5, v4                                  // 00000000041C: 7E0A0304
  v_mov_b32     v4, v0                                  // 000000000420: 7E080300
  flat_load_dword  v0, v[4:5]                           // 000000000424: DC300000 00000004
  s_mov_b64     s[4:5], exec                            // 00000000042C: BE84047E
  s_mov_b64     s[16:17], exec                          // 000000000430: BE90047E
  v_mov_b32     v4, 0x000003e8                          // 000000000434: 7E0802FF 000003E8
  s_nop         0x0000                                  // 00000000043C: BF800000
  s_nop         0x0000                                  // 000000000440: BF800000
  s_nop         0x0000                                  // 000000000444: BF800000
label_0112:
  v_lshlrev_b32  v3, 2, v3                              // 000000000448: 34060682
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000044C: BF8C0070
  v_add_i32     v3, s[18:19], v0, v3                    // 000000000450: D24A1203 00020700
  v_add_i32     v4, vcc, -1, v4                         // 000000000458: 4A0808C1
  v_cmp_ne_i32  s[18:19], v4, 0                         // 00000000045C: D10A0012 00010104
  s_mov_b64     s[20:21], exec                          // 000000000464: BE94047E
  s_andn2_b64   exec, s[20:21], s[18:19]                // 000000000468: 8AFE1214
  s_cbranch_execz  label_011E                           // 00000000046C: BF880002
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000000470: 8A907E10
  s_cbranch_scc0  label_0120                            // 000000000474: BF840002
label_011E:
  s_and_b64     exec, s[20:21], s[16:17]                // 000000000478: 87FE1014
  s_branch      label_0112                              // 00000000047C: BF82FFF2
label_0120:
  s_mov_b64     exec, s[4:5]                            // 000000000480: BEFE0404
  v_mov_b32     v0, 0                                   // 000000000484: 7E000280
label_0122:
  s_andn2_b64   exec, s[14:15], exec                    // 000000000488: 8AFE7E0E
  s_cbranch_execz  label_0125                           // 00000000048C: BF880001
  v_mov_b32     v0, 6                                   // 000000000490: 7E000286
label_0125:
  s_mov_b64     exec, s[12:13]                          // 000000000494: BEFE040C
label_0126:
  s_andn2_b64   exec, s[10:11], exec                    // 000000000498: 8AFE7E0A
  s_cbranch_execz  label_017B                           // 00000000049C: BF880053
  v_cmp_ne_i32  s[4:5], v3, 6                           // 0000000004A0: D10A0004 00010D03
  s_mov_b64     s[12:13], exec                          // 0000000004A8: BE8C047E
  s_andn2_b64   exec, s[12:13], s[4:5]                  // 0000000004AC: 8AFE040C
  s_cbranch_execz  label_0150                           // 0000000004B0: BF880023
  v_ashrrev_i32  v1, 31, v0                             // 0000000004B4: 3002009F
  v_lshl_b64    v[1:2], v[0:1], 2                       // 0000000004B8: D2C20001 00010500
  s_waitcnt     lgkmcnt(0)                              // 0000000004C0: BF8C007F
  v_add_i32     v0, s[4:5], s2, v1                      // 0000000004C4: D24A0400 00020202
  v_mov_b32     v4, s3                                  // 0000000004CC: 7E080203
  v_addc_u32    v4, vcc, v4, v2, s[4:5]                 // 0000000004D0: D2506A04 00120504
  v_mov_b32     v5, v4                                  // 0000000004D8: 7E0A0304
  v_mov_b32     v4, v0                                  // 0000000004DC: 7E080300
  flat_load_dword  v0, v[4:5]                           // 0000000004E0: DC300000 00000004
  s_mov_b64     s[4:5], exec                            // 0000000004E8: BE84047E
  s_mov_b64     s[14:15], exec                          // 0000000004EC: BE8E047E
  v_mov_b32     v4, 0x000003e8                          // 0000000004F0: 7E0802FF 000003E8
  s_nop         0x0000                                  // 0000000004F8: BF800000
  s_nop         0x0000                                  // 0000000004FC: BF800000
label_0140:
  v_lshlrev_b32  v3, 2, v3                              // 000000000500: 34060682
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000504: BF8C0070
  v_add_i32     v3, s[16:17], v0, v3                    // 000000000508: D24A1003 00020700
  v_add_i32     v4, vcc, -1, v4                         // 000000000510: 4A0808C1
  v_cmp_ne_i32  s[16:17], v4, 0                         // 000000000514: D10A0010 00010104
  s_mov_b64     s[18:19], exec                          // 00000000051C: BE92047E
  s_andn2_b64   exec, s[18:19], s[16:17]                // 000000000520: 8AFE1012
  s_cbranch_execz  label_014C                           // 000000000524: BF880002
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000528: 8A8E7E0E
  s_cbranch_scc0  label_014E                            // 00000000052C: BF840002
label_014C:
  s_and_b64     exec, s[18:19], s[14:15]                // 000000000530: 87FE0E12
  s_branch      label_0140                              // 000000000534: BF82FFF2
label_014E:
  s_mov_b64     exec, s[4:5]                            // 000000000538: BEFE0404
  v_mov_b32     v0, 0                                   // 00000000053C: 7E000280
label_0150:
  s_andn2_b64   exec, s[12:13], exec                    // 000000000540: 8AFE7E0C
  s_cbranch_execz  label_017B                           // 000000000544: BF880029
  v_cmp_ne_i32  s[4:5], v3, 7                           // 000000000548: D10A0004 00010F03
  s_mov_b64     s[14:15], exec                          // 000000000550: BE8E047E
  s_andn2_b64   exec, s[14:15], s[4:5]                  // 000000000554: 8AFE040E
  s_cbranch_execz  label_0178                           // 000000000558: BF880021
  v_ashrrev_i32  v1, 31, v0                             // 00000000055C: 3002009F
  v_lshl_b64    v[1:2], v[0:1], 2                       // 000000000560: D2C20001 00010500
  s_waitcnt     lgkmcnt(0)                              // 000000000568: BF8C007F
  v_add_i32     v0, s[4:5], s2, v1                      // 00000000056C: D24A0400 00020202
  v_mov_b32     v4, s3                                  // 000000000574: 7E080203
  v_addc_u32    v4, vcc, v4, v2, s[4:5]                 // 000000000578: D2506A04 00120504
  v_mov_b32     v5, v4                                  // 000000000580: 7E0A0304
  v_mov_b32     v4, v0                                  // 000000000584: 7E080300
  flat_load_dword  v0, v[4:5]                           // 000000000588: DC300000 00000004
  s_mov_b64     s[4:5], exec                            // 000000000590: BE84047E
  s_mov_b64     s[16:17], exec                          // 000000000594: BE90047E
  v_mov_b32     v4, 0x000003e8                          // 000000000598: 7E0802FF 000003E8
label_0168:
  v_lshlrev_b32  v3, 2, v3                              // 0000000005A0: 34060682
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 0000000005A4: BF8C0070
  v_add_i32     v3, s[18:19], v0, v3                    // 0000000005A8: D24A1203 00020700
  v_add_i32     v4, vcc, -1, v4                         // 0000000005B0: 4A0808C1
  v_cmp_ne_i32  s[18:19], v4, 0                         // 0000000005B4: D10A0012 00010104
  s_mov_b64     s[20:21], exec                          // 0000000005BC: BE94047E
  s_andn2_b64   exec, s[20:21], s[18:19]                // 0000000005C0: 8AFE1214
  s_cbranch_execz  label_0174                           // 0000000005C4: BF880002
  s_andn2_b64   s[16:17], s[16:17], exec                // 0000000005C8: 8A907E10
  s_cbranch_scc0  label_0176                            // 0000000005CC: BF840002
label_0174:
  s_and_b64     exec, s[20:21], s[16:17]                // 0000000005D0: 87FE1014
  s_branch      label_0168                              // 0000000005D4: BF82FFF2
label_0176:
  s_mov_b64     exec, s[4:5]                            // 0000000005D8: BEFE0404
  v_mov_b32     v0, 0                                   // 0000000005DC: 7E000280
label_0178:
  s_andn2_b64   exec, s[14:15], exec                    // 0000000005E0: 8AFE7E0E
  s_cbranch_execz  label_017B                           // 0000000005E4: BF880001
  v_mov_b32     v0, 5                                   // 0000000005E8: 7E000285
label_017B:
  s_mov_b64     exec, s[8:9]                            // 0000000005EC: BEFE0408
label_017C:
  s_andn2_b64   exec, s[6:7], exec                      // 0000000005F0: 8AFE7E06
  s_cbranch_execz  label_02E1                           // 0000000005F4: BF880163
  v_cmp_gt_u32  s[4:5], v3, 11                          // 0000000005F8: D1880004 00011703
  s_mov_b64     s[8:9], exec                            // 000000000600: BE88047E
  s_andn2_b64   exec, s[8:9], s[4:5]                    // 000000000604: 8AFE0408
  s_cbranch_execz  label_0230                           // 000000000608: BF8800AD
  v_cmp_gt_u32  s[4:5], v3, 9                           // 00000000060C: D1880004 00011303
  s_mov_b64     s[10:11], exec                          // 000000000614: BE8A047E
  s_andn2_b64   exec, s[10:11], s[4:5]                  // 000000000618: 8AFE040A
  s_cbranch_execz  label_01DA                           // 00000000061C: BF880052
  v_cmp_ne_i32  s[4:5], v3, 8                           // 000000000620: D10A0004 00011103
  s_mov_b64     s[12:13], exec                          // 000000000628: BE8C047E
  s_andn2_b64   exec, s[12:13], s[4:5]                  // 00000000062C: 8AFE040C
  s_cbranch_execz  label_01AE                           // 000000000630: BF880021
  v_ashrrev_i32  v1, 31, v0                             // 000000000634: 3002009F
  v_lshl_b64    v[1:2], v[0:1], 2                       // 000000000638: D2C20001 00010500
  s_waitcnt     lgkmcnt(0)                              // 000000000640: BF8C007F
  v_add_i32     v0, s[4:5], s2, v1                      // 000000000644: D24A0400 00020202
  v_mov_b32     v4, s3                                  // 00000000064C: 7E080203
  v_addc_u32    v4, vcc, v4, v2, s[4:5]                 // 000000000650: D2506A04 00120504
  v_mov_b32     v5, v4                                  // 000000000658: 7E0A0304
  v_mov_b32     v4, v0                                  // 00000000065C: 7E080300
  flat_load_dword  v0, v[4:5]                           // 000000000660: DC300000 00000004
  s_mov_b64     s[4:5], exec                            // 000000000668: BE84047E
  s_mov_b64     s[14:15], exec                          // 00000000066C: BE8E047E
  v_mov_b32     v4, 0x000003e8                          // 000000000670: 7E0802FF 000003E8
label_019E:
  v_lshlrev_b32  v3, 2, v3                              // 000000000678: 34060682
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000067C: BF8C0070
  v_add_i32     v3, s[16:17], v0, v3                    // 000000000680: D24A1003 00020700
  v_add_i32     v4, vcc, -1, v4                         // 000000000688: 4A0808C1
  v_cmp_ne_i32  s[16:17], v4, 0                         // 00000000068C: D10A0010 00010104
  s_mov_b64     s[18:19], exec                          // 000000000694: BE92047E
  s_andn2_b64   exec, s[18:19], s[16:17]                // 000000000698: 8AFE1012
  s_cbranch_execz  label_01AA                           // 00000000069C: BF880002
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000006A0: 8A8E7E0E
  s_cbranch_scc0  label_01AC                            // 0000000006A4: BF840002
label_01AA:
  s_and_b64     exec, s[18:19], s[14:15]                // 0000000006A8: 87FE0E12
  s_branch      label_019E                              // 0000000006AC: BF82FFF2
label_01AC:
  s_mov_b64     exec, s[4:5]                            // 0000000006B0: BEFE0404
  v_mov_b32     v0, 0                                   // 0000000006B4: 7E000280
label_01AE:
  s_andn2_b64   exec, s[12:13], exec                    // 0000000006B8: 8AFE7E0C
  s_cbranch_execz  label_01D9                           // 0000000006BC: BF880029
  v_cmp_ne_i32  s[4:5], v3, 9                           // 0000000006C0: D10A0004 00011303
  s_mov_b64     s[14:15], exec                          // 0000000006C8: BE8E047E
  s_andn2_b64   exec, s[14:15], s[4:5]                  // 0000000006CC: 8AFE040E
  s_cbranch_execz  label_01D6                           // 0000000006D0: BF880021
  v_ashrrev_i32  v1, 31, v0                             // 0000000006D4: 3002009F
  v_lshl_b64    v[1:2], v[0:1], 2                       // 0000000006D8: D2C20001 00010500
  s_waitcnt     lgkmcnt(0)                              // 0000000006E0: BF8C007F
  v_add_i32     v0, s[4:5], s2, v1                      // 0000000006E4: D24A0400 00020202
  v_mov_b32     v4, s3                                  // 0000000006EC: 7E080203
  v_addc_u32    v4, vcc, v4, v2, s[4:5]                 // 0000000006F0: D2506A04 00120504
  v_mov_b32     v5, v4                                  // 0000000006F8: 7E0A0304
  v_mov_b32     v4, v0                                  // 0000000006FC: 7E080300
  flat_load_dword  v0, v[4:5]                           // 000000000700: DC300000 00000004
  s_mov_b64     s[4:5], exec                            // 000000000708: BE84047E
  s_mov_b64     s[16:17], exec                          // 00000000070C: BE90047E
  v_mov_b32     v4, 0x000003e8                          // 000000000710: 7E0802FF 000003E8
label_01C6:
  v_lshlrev_b32  v3, 2, v3                              // 000000000718: 34060682
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000071C: BF8C0070
  v_add_i32     v3, s[18:19], v0, v3                    // 000000000720: D24A1203 00020700
  v_add_i32     v4, vcc, -1, v4                         // 000000000728: 4A0808C1
  v_cmp_ne_i32  s[18:19], v4, 0                         // 00000000072C: D10A0012 00010104
  s_mov_b64     s[20:21], exec                          // 000000000734: BE94047E
  s_andn2_b64   exec, s[20:21], s[18:19]                // 000000000738: 8AFE1214
  s_cbranch_execz  label_01D2                           // 00000000073C: BF880002
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000000740: 8A907E10
  s_cbranch_scc0  label_01D4                            // 000000000744: BF840002
label_01D2:
  s_and_b64     exec, s[20:21], s[16:17]                // 000000000748: 87FE1014
  s_branch      label_01C6                              // 00000000074C: BF82FFF2
label_01D4:
  s_mov_b64     exec, s[4:5]                            // 000000000750: BEFE0404
  v_mov_b32     v0, 0                                   // 000000000754: 7E000280
label_01D6:
  s_andn2_b64   exec, s[14:15], exec                    // 000000000758: 8AFE7E0E
  s_cbranch_execz  label_01D9                           // 00000000075C: BF880001
  v_mov_b32     v0, 4                                   // 000000000760: 7E000284
label_01D9:
  s_mov_b64     exec, s[12:13]                          // 000000000764: BEFE040C
label_01DA:
  s_andn2_b64   exec, s[10:11], exec                    // 000000000768: 8AFE7E0A
  s_cbranch_execz  label_022F                           // 00000000076C: BF880053
  v_cmp_ne_i32  s[4:5], v3, 10                          // 000000000770: D10A0004 00011503
  s_mov_b64     s[12:13], exec                          // 000000000778: BE8C047E
  s_andn2_b64   exec, s[12:13], s[4:5]                  // 00000000077C: 8AFE040C
  s_cbranch_execz  label_0202                           // 000000000780: BF880021
  v_ashrrev_i32  v1, 31, v0                             // 000000000784: 3002009F
  v_lshl_b64    v[1:2], v[0:1], 2                       // 000000000788: D2C20001 00010500
  s_waitcnt     lgkmcnt(0)                              // 000000000790: BF8C007F
  v_add_i32     v0, s[4:5], s2, v1                      // 000000000794: D24A0400 00020202
  v_mov_b32     v4, s3                                  // 00000000079C: 7E080203
  v_addc_u32    v4, vcc, v4, v2, s[4:5]                 // 0000000007A0: D2506A04 00120504
  v_mov_b32     v5, v4                                  // 0000000007A8: 7E0A0304
  v_mov_b32     v4, v0                                  // 0000000007AC: 7E080300
  flat_load_dword  v0, v[4:5]                           // 0000000007B0: DC300000 00000004
  s_mov_b64     s[4:5], exec                            // 0000000007B8: BE84047E
  s_mov_b64     s[14:15], exec                          // 0000000007BC: BE8E047E
  v_mov_b32     v4, 0x000003e8                          // 0000000007C0: 7E0802FF 000003E8
label_01F2:
  v_lshlrev_b32  v3, 2, v3                              // 0000000007C8: 34060682
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 0000000007CC: BF8C0070
  v_add_i32     v3, s[16:17], v0, v3                    // 0000000007D0: D24A1003 00020700
  v_add_i32     v4, vcc, -1, v4                         // 0000000007D8: 4A0808C1
  v_cmp_ne_i32  s[16:17], v4, 0                         // 0000000007DC: D10A0010 00010104
  s_mov_b64     s[18:19], exec                          // 0000000007E4: BE92047E
  s_andn2_b64   exec, s[18:19], s[16:17]                // 0000000007E8: 8AFE1012
  s_cbranch_execz  label_01FE                           // 0000000007EC: BF880002
  s_andn2_b64   s[14:15], s[14:15], exec                // 0000000007F0: 8A8E7E0E
  s_cbranch_scc0  label_0200                            // 0000000007F4: BF840002
label_01FE:
  s_and_b64     exec, s[18:19], s[14:15]                // 0000000007F8: 87FE0E12
  s_branch      label_01F2                              // 0000000007FC: BF82FFF2
label_0200:
  s_mov_b64     exec, s[4:5]                            // 000000000800: BEFE0404
  v_mov_b32     v0, 0                                   // 000000000804: 7E000280
label_0202:
  s_andn2_b64   exec, s[12:13], exec                    // 000000000808: 8AFE7E0C
  s_cbranch_execz  label_022F                           // 00000000080C: BF88002B
  v_cmp_ne_i32  s[4:5], v3, 11                          // 000000000810: D10A0004 00011703
  s_mov_b64     s[14:15], exec                          // 000000000818: BE8E047E
  s_andn2_b64   exec, s[14:15], s[4:5]                  // 00000000081C: 8AFE040E
  s_cbranch_execz  label_022C                           // 000000000820: BF880023
  v_ashrrev_i32  v1, 31, v0                             // 000000000824: 3002009F
  v_lshl_b64    v[1:2], v[0:1], 2                       // 000000000828: D2C20001 00010500
  s_waitcnt     lgkmcnt(0)                              // 000000000830: BF8C007F
  v_add_i32     v0, s[4:5], s2, v1                      // 000000000834: D24A0400 00020202
  v_mov_b32     v4, s3                                  // 00000000083C: 7E080203
  v_addc_u32    v4, vcc, v4, v2, s[4:5]                 // 000000000840: D2506A04 00120504
  v_mov_b32     v5, v4                                  // 000000000848: 7E0A0304
  v_mov_b32     v4, v0                                  // 00000000084C: 7E080300
  flat_load_dword  v0, v[4:5]                           // 000000000850: DC300000 00000004
  s_mov_b64     s[4:5], exec                            // 000000000858: BE84047E
  s_mov_b64     s[16:17], exec                          // 00000000085C: BE90047E
  v_mov_b32     v4, 0x000003e8                          // 000000000860: 7E0802FF 000003E8
  s_nop         0x0000                                  // 000000000868: BF800000
  s_nop         0x0000                                  // 00000000086C: BF800000
label_021C:
  v_lshlrev_b32  v3, 2, v3                              // 000000000870: 34060682
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000874: BF8C0070
  v_add_i32     v3, s[18:19], v0, v3                    // 000000000878: D24A1203 00020700
  v_add_i32     v4, vcc, -1, v4                         // 000000000880: 4A0808C1
  v_cmp_ne_i32  s[18:19], v4, 0                         // 000000000884: D10A0012 00010104
  s_mov_b64     s[20:21], exec                          // 00000000088C: BE94047E
  s_andn2_b64   exec, s[20:21], s[18:19]                // 000000000890: 8AFE1214
  s_cbranch_execz  label_0228                           // 000000000894: BF880002
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000000898: 8A907E10
  s_cbranch_scc0  label_022A                            // 00000000089C: BF840002
label_0228:
  s_and_b64     exec, s[20:21], s[16:17]                // 0000000008A0: 87FE1014
  s_branch      label_021C                              // 0000000008A4: BF82FFF2
label_022A:
  s_mov_b64     exec, s[4:5]                            // 0000000008A8: BEFE0404
  v_mov_b32     v0, 0                                   // 0000000008AC: 7E000280
label_022C:
  s_andn2_b64   exec, s[14:15], exec                    // 0000000008B0: 8AFE7E0E
  s_cbranch_execz  label_022F                           // 0000000008B4: BF880001
  v_mov_b32     v0, 3                                   // 0000000008B8: 7E000283
label_022F:
  s_mov_b64     exec, s[10:11]                          // 0000000008BC: BEFE040A
label_0230:
  s_andn2_b64   exec, s[8:9], exec                      // 0000000008C0: 8AFE7E08
  s_cbranch_execz  label_02E1                           // 0000000008C4: BF8800AF
  v_cmp_gt_u32  s[4:5], v3, 13                          // 0000000008C8: D1880004 00011B03
  s_mov_b64     s[10:11], exec                          // 0000000008D0: BE8A047E
  s_andn2_b64   exec, s[10:11], s[4:5]                  // 0000000008D4: 8AFE040A
  s_cbranch_execz  label_028C                           // 0000000008D8: BF880055
  v_cmp_ne_i32  s[4:5], v3, 12                          // 0000000008DC: D10A0004 00011903
  s_mov_b64     s[12:13], exec                          // 0000000008E4: BE8C047E
  s_andn2_b64   exec, s[12:13], s[4:5]                  // 0000000008E8: 8AFE040C
  s_cbranch_execz  label_025D                           // 0000000008EC: BF880021
  v_ashrrev_i32  v1, 31, v0                             // 0000000008F0: 3002009F
  v_lshl_b64    v[1:2], v[0:1], 2                       // 0000000008F4: D2C20001 00010500
  s_waitcnt     lgkmcnt(0)                              // 0000000008FC: BF8C007F
  v_add_i32     v0, s[4:5], s2, v1                      // 000000000900: D24A0400 00020202
  v_mov_b32     v4, s3                                  // 000000000908: 7E080203
  v_addc_u32    v4, vcc, v4, v2, s[4:5]                 // 00000000090C: D2506A04 00120504
  v_mov_b32     v5, v4                                  // 000000000914: 7E0A0304
  v_mov_b32     v4, v0                                  // 000000000918: 7E080300
  flat_load_dword  v0, v[4:5]                           // 00000000091C: DC300000 00000004
  s_mov_b64     s[4:5], exec                            // 000000000924: BE84047E
  s_mov_b64     s[14:15], exec                          // 000000000928: BE8E047E
  v_mov_b32     v4, 0x000003e8                          // 00000000092C: 7E0802FF 000003E8
label_024D:
  v_lshlrev_b32  v3, 2, v3                              // 000000000934: 34060682
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000938: BF8C0070
  v_add_i32     v3, s[16:17], v0, v3                    // 00000000093C: D24A1003 00020700
  v_add_i32     v4, vcc, -1, v4                         // 000000000944: 4A0808C1
  v_cmp_ne_i32  s[16:17], v4, 0                         // 000000000948: D10A0010 00010104
  s_mov_b64     s[18:19], exec                          // 000000000950: BE92047E
  s_andn2_b64   exec, s[18:19], s[16:17]                // 000000000954: 8AFE1012
  s_cbranch_execz  label_0259                           // 000000000958: BF880002
  s_andn2_b64   s[14:15], s[14:15], exec                // 00000000095C: 8A8E7E0E
  s_cbranch_scc0  label_025B                            // 000000000960: BF840002
label_0259:
  s_and_b64     exec, s[18:19], s[14:15]                // 000000000964: 87FE0E12
  s_branch      label_024D                              // 000000000968: BF82FFF2
label_025B:
  s_mov_b64     exec, s[4:5]                            // 00000000096C: BEFE0404
  v_mov_b32     v0, 0                                   // 000000000970: 7E000280
label_025D:
  s_andn2_b64   exec, s[12:13], exec                    // 000000000974: 8AFE7E0C
  s_cbranch_execz  label_028B                           // 000000000978: BF88002C
  v_cmp_ne_i32  s[4:5], v3, 13                          // 00000000097C: D10A0004 00011B03
  s_mov_b64     s[14:15], exec                          // 000000000984: BE8E047E
  s_andn2_b64   exec, s[14:15], s[4:5]                  // 000000000988: 8AFE040E
  s_cbranch_execz  label_0288                           // 00000000098C: BF880024
  v_ashrrev_i32  v1, 31, v0                             // 000000000990: 3002009F
  v_lshl_b64    v[1:2], v[0:1], 2                       // 000000000994: D2C20001 00010500
  s_waitcnt     lgkmcnt(0)                              // 00000000099C: BF8C007F
  v_add_i32     v0, s[4:5], s2, v1                      // 0000000009A0: D24A0400 00020202
  v_mov_b32     v4, s3                                  // 0000000009A8: 7E080203
  v_addc_u32    v4, vcc, v4, v2, s[4:5]                 // 0000000009AC: D2506A04 00120504
  v_mov_b32     v5, v4                                  // 0000000009B4: 7E0A0304
  v_mov_b32     v4, v0                                  // 0000000009B8: 7E080300
  flat_load_dword  v0, v[4:5]                           // 0000000009BC: DC300000 00000004
  s_mov_b64     s[4:5], exec                            // 0000000009C4: BE84047E
  s_mov_b64     s[16:17], exec                          // 0000000009C8: BE90047E
  v_mov_b32     v4, 0x000003e8                          // 0000000009CC: 7E0802FF 000003E8
  s_nop         0x0000                                  // 0000000009D4: BF800000
  s_nop         0x0000                                  // 0000000009D8: BF800000
  s_nop         0x0000                                  // 0000000009DC: BF800000
label_0278:
  v_lshlrev_b32  v3, 2, v3                              // 0000000009E0: 34060682
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 0000000009E4: BF8C0070
  v_add_i32     v3, s[18:19], v0, v3                    // 0000000009E8: D24A1203 00020700
  v_add_i32     v4, vcc, -1, v4                         // 0000000009F0: 4A0808C1
  v_cmp_ne_i32  s[18:19], v4, 0                         // 0000000009F4: D10A0012 00010104
  s_mov_b64     s[20:21], exec                          // 0000000009FC: BE94047E
  s_andn2_b64   exec, s[20:21], s[18:19]                // 000000000A00: 8AFE1214
  s_cbranch_execz  label_0284                           // 000000000A04: BF880002
  s_andn2_b64   s[16:17], s[16:17], exec                // 000000000A08: 8A907E10
  s_cbranch_scc0  label_0286                            // 000000000A0C: BF840002
label_0284:
  s_and_b64     exec, s[20:21], s[16:17]                // 000000000A10: 87FE1014
  s_branch      label_0278                              // 000000000A14: BF82FFF2
label_0286:
  s_mov_b64     exec, s[4:5]                            // 000000000A18: BEFE0404
  v_mov_b32     v0, 0                                   // 000000000A1C: 7E000280
label_0288:
  s_andn2_b64   exec, s[14:15], exec                    // 000000000A20: 8AFE7E0E
  s_cbranch_execz  label_028B                           // 000000000A24: BF880001
  v_mov_b32     v0, 2                                   // 000000000A28: 7E000282
label_028B:
  s_mov_b64     exec, s[12:13]                          // 000000000A2C: BEFE040C
label_028C:
  s_andn2_b64   exec, s[10:11], exec                    // 000000000A30: 8AFE7E0A
  s_cbranch_execz  label_02E1                           // 000000000A34: BF880053
  v_cmp_ne_i32  s[4:5], v3, 14                          // 000000000A38: D10A0004 00011D03
  s_mov_b64     s[12:13], exec                          // 000000000A40: BE8C047E
  s_andn2_b64   exec, s[12:13], s[4:5]                  // 000000000A44: 8AFE040C
  s_cbranch_execz  label_02B6                           // 000000000A48: BF880023
  v_ashrrev_i32  v1, 31, v0                             // 000000000A4C: 3002009F
  v_lshl_b64    v[1:2], v[0:1], 2                       // 000000000A50: D2C20001 00010500
  s_waitcnt     lgkmcnt(0)                              // 000000000A58: BF8C007F
  v_add_i32     v0, s[4:5], s2, v1                      // 000000000A5C: D24A0400 00020202
  v_mov_b32     v4, s3                                  // 000000000A64: 7E080203
  v_addc_u32    v4, vcc, v4, v2, s[4:5]                 // 000000000A68: D2506A04 00120504
  v_mov_b32     v5, v4                                  // 000000000A70: 7E0A0304
  v_mov_b32     v4, v0                                  // 000000000A74: 7E080300
  flat_load_dword  v0, v[4:5]                           // 000000000A78: DC300000 00000004
  s_mov_b64     s[4:5], exec                            // 000000000A80: BE84047E
  s_mov_b64     s[14:15], exec                          // 000000000A84: BE8E047E
  v_mov_b32     v4, 0x000003e8                          // 000000000A88: 7E0802FF 000003E8
  s_nop         0x0000                                  // 000000000A90: BF800000
  s_nop         0x0000                                  // 000000000A94: BF800000
label_02A6:
  v_lshlrev_b32  v3, 2, v3                              // 000000000A98: 34060682
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000A9C: BF8C0070
  v_add_i32     v3, s[16:17], v0, v3                    // 000000000AA0: D24A1003 00020700
  v_add_i32     v4, vcc, -1, v4                         // 000000000AA8: 4A0808C1
  v_cmp_ne_i32  s[16:17], v4, 0                         // 000000000AAC: D10A0010 00010104
  s_mov_b64     s[18:19], exec                          // 000000000AB4: BE92047E
  s_andn2_b64   exec, s[18:19], s[16:17]                // 000000000AB8: 8AFE1012
  s_cbranch_execz  label_02B2                           // 000000000ABC: BF880002
  s_andn2_b64   s[14:15], s[14:15], exec                // 000000000AC0: 8A8E7E0E
  s_cbranch_scc0  label_02B4                            // 000000000AC4: BF840002
label_02B2:
  s_and_b64     exec, s[18:19], s[14:15]                // 000000000AC8: 87FE0E12
  s_branch      label_02A6                              // 000000000ACC: BF82FFF2
label_02B4:
  s_mov_b64     exec, s[4:5]                            // 000000000AD0: BEFE0404
  v_mov_b32     v0, 0                                   // 000000000AD4: 7E000280
label_02B6:
  s_andn2_b64   exec, s[12:13], exec                    // 000000000AD8: 8AFE7E0C
  s_cbranch_execz  label_02E1                           // 000000000ADC: BF880029
  v_cmp_ne_i32  s[4:5], v3, 15                          // 000000000AE0: D10A0004 00011F03
  s_mov_b64     s[14:15], exec                          // 000000000AE8: BE8E047E
  s_andn2_b64   exec, s[14:15], s[4:5]                  // 000000000AEC: 8AFE040E
  s_cbranch_execz  label_02DE                           // 000000000AF0: BF880021
  v_ashrrev_i32  v1, 31, v0                             // 000000000AF4: 3002009F
  v_lshl_b64    v[1:2], v[0:1], 2                       // 000000000AF8: D2C20001 00010500
  s_waitcnt     lgkmcnt(0)                              // 000000000B00: BF8C007F
  v_add_i32     v0, s[4:5], s2, v1                      // 000000000B04: D24A0400 00020202
  v_mov_b32     v4, s3                                  // 000000000B0C: 7E080203
  v_addc_u32    v4, vcc, v4, v2, s[4:5]                 // 000000000B10: D2506A04 00120504
  v_mov_b32     v5, v4                                  // 000000000B18: 7E0A0304
  v_mov_b32     v4, v0                                  // 000000000B1C: 7E080300
  flat_load_dword  v0, v[4:5]                           // 000000000B20: DC300000 00000004
  s_mov_b64     s[2:3], exec                            // 000000000B28: BE82047E
  s_mov_b64     s[4:5], exec                            // 000000000B2C: BE84047E
  v_mov_b32     v4, 0x000003e8                          // 000000000B30: 7E0802FF 000003E8
label_02CE:
  v_lshlrev_b32  v3, 2, v3                              // 000000000B38: 34060682
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 000000000B3C: BF8C0070
  v_add_i32     v3, s[16:17], v0, v3                    // 000000000B40: D24A1003 00020700
  v_add_i32     v4, vcc, -1, v4                         // 000000000B48: 4A0808C1
  v_cmp_ne_i32  s[16:17], v4, 0                         // 000000000B4C: D10A0010 00010104
  s_mov_b64     s[18:19], exec                          // 000000000B54: BE92047E
  s_andn2_b64   exec, s[18:19], s[16:17]                // 000000000B58: 8AFE1012
  s_cbranch_execz  label_02DA                           // 000000000B5C: BF880002
  s_andn2_b64   s[4:5], s[4:5], exec                    // 000000000B60: 8A847E04
  s_cbranch_scc0  label_02DC                            // 000000000B64: BF840002
label_02DA:
  s_and_b64     exec, s[18:19], s[4:5]                  // 000000000B68: 87FE0412
  s_branch      label_02CE                              // 000000000B6C: BF82FFF2
label_02DC:
  s_mov_b64     exec, s[2:3]                            // 000000000B70: BEFE0402
  v_mov_b32     v0, 0                                   // 000000000B74: 7E000280
label_02DE:
  s_andn2_b64   exec, s[14:15], exec                    // 000000000B78: 8AFE7E0E
  s_cbranch_execz  label_02E1                           // 000000000B7C: BF880001
  v_mov_b32     v0, 1                                   // 000000000B80: 7E000281
label_02E1:
  s_mov_b64     exec, s[6:7]                            // 000000000B84: BEFE0406
  s_waitcnt     lgkmcnt(0)                              // 000000000B88: BF8C007F
  v_cmp_eq_u32  s[2:3], v0, 8                           // 000000000B8C: D1840002 00011100
  s_andn2_b64   exec, s[6:7], s[2:3]                    // 000000000B94: 8AFE0206
  s_cbranch_execz  label_0311                           // 000000000B98: BF88002A
  v_cmp_eq_u32  s[2:3], v0, 7                           // 000000000B9C: D1840002 00010F00
  s_mov_b64     s[4:5], exec                            // 000000000BA4: BE84047E
  s_andn2_b64   exec, s[4:5], s[2:3]                    // 000000000BA8: 8AFE0204
  s_cbranch_execz  label_0311                           // 000000000BAC: BF880025
  v_cmp_eq_u32  s[2:3], v0, 6                           // 000000000BB0: D1840002 00010D00
  s_mov_b64     s[8:9], exec                            // 000000000BB8: BE88047E
  s_andn2_b64   exec, s[8:9], s[2:3]                    // 000000000BBC: 8AFE0208
  s_cbranch_execz  label_0311                           // 000000000BC0: BF880020
  v_cmp_eq_u32  s[2:3], v0, 5                           // 000000000BC4: D1840002 00010B00
  s_mov_b64     s[10:11], exec                          // 000000000BCC: BE8A047E
  s_andn2_b64   exec, s[10:11], s[2:3]                  // 000000000BD0: 8AFE020A
  s_cbranch_execz  label_0311                           // 000000000BD4: BF88001B
  v_cmp_eq_u32  s[2:3], v0, 4                           // 000000000BD8: D1840002 00010900
  s_mov_b64     s[12:13], exec                          // 000000000BE0: BE8C047E
  s_andn2_b64   exec, s[12:13], s[2:3]                  // 000000000BE4: 8AFE020C
  s_cbranch_execz  label_0311                           // 000000000BE8: BF880016
  v_cmp_eq_u32  s[2:3], v0, 3                           // 000000000BEC: D1840002 00010700
  s_mov_b64     s[14:15], exec                          // 000000000BF4: BE8E047E
  s_andn2_b64   exec, s[14:15], s[2:3]                  // 000000000BF8: 8AFE020E
  s_cbranch_execz  label_0311                           // 000000000BFC: BF880011
  v_cmp_eq_u32  s[2:3], v0, 2                           // 000000000C00: D1840002 00010500
  s_mov_b64     s[16:17], exec                          // 000000000C08: BE90047E
  s_andn2_b64   exec, s[16:17], s[2:3]                  // 000000000C0C: 8AFE0210
  s_cbranch_execz  label_0311                           // 000000000C10: BF88000C
  v_cmp_eq_u32  s[2:3], v0, 1                           // 000000000C14: D1840002 00010300
  s_mov_b64     s[18:19], exec                          // 000000000C1C: BE92047E
  s_andn2_b64   exec, s[18:19], s[2:3]                  // 000000000C20: 8AFE0212
  s_cbranch_execz  label_0311                           // 000000000C24: BF880007
  v_add_i32     v0, s[2:3], s0, v1                      // 000000000C28: D24A0200 00020200
  v_mov_b32     v1, s1                                  // 000000000C30: 7E020201
  v_addc_u32    v1, vcc, v1, v2, s[2:3]                 // 000000000C34: D2506A01 000A0501
  flat_store_dword  v[0:1], v3                          // 000000000C3C: DC700000 00000300
label_0311:
  s_endpgm                                              // 000000000C44: BF810000
end

; ----------------- CS Data ------------------------

codeLenInByte        = 3400 bytes;
objectHeaderByteSize = 256 bytes;

; launchModeFlags    = 0x00000200
isAql                = TRUE;

userElementCount     = 0;
extUserElementCount  = 0;
NumVgprs             = 6;
NumSgprs             = 24;
FloatMode            = 192;
IeeeMode             = 1;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s65535;
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000000

;COMPUTE_PGM_RSRC2       = 0x00000088
COMPUTE_PGM_RSRC2:USER_SGPR      = 4
COMPUTE_PGM_RSRC2:TGID_X_EN      = 1
; ---------------------------- AMD Code Descriptor ----------------------------
amd_kernel_code_version_major                  = 1
amd_kernel_code_version_minor                  = 0
amd_machine_kind                               = AMD_MACHINE_KIND_AMDGPU
amd_machine_version_major                      = 0
amd_machine_version_minor                      = 0
amd_machine_version_stepping                   = 0
kernel_code_entry_byte_offset                  = 256
max_scratch_backing_memory_byte_size           = 0
; compute_pgm_rsrc1:
  granulated_workitem_vgpr_count                       = 1
  granulated_wavefront_sgpr_count                      = 2
  priority                                             = 0
  float_mode_round_32                                  = ROUND_TO_NEAREST_EVEN
  float_mode_round_16_64                               = ROUND_TO_NEAREST_EVEN
  float_mode_denorm_32                                 = FLUSH_SOURCE_OUTPUT
  float_mode_denorm_16_64                              = FLUSH_NONE
  enable_ieee_mode                                     = TRUE
; compute_pgm_rsrc2:
  user_sgpr_count                                      = 4
  enable_sgpr_workgroup_id_x                           = TRUE
  enable_vgpr_workitem_id                              = X
  granulated_lds_size                                  = 0
enable_sgpr_dispatch_ptr                       = TRUE
enable_sgpr_kernarg_segment_ptr                = TRUE
private_element_size                           = DWORD (4 bytes)
is_ptr64                                       = TRUE
gds_segment_byte_size                          = 0
kernarg_segment_byte_size                      = 72
wavefront_sgpr_count                           = 24
workitem_vgpr_count                            = 6
kernarg_segment_alignment                      = 3
wavefront_size                                 = 6
